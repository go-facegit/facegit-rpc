syntax = "proto3";

option go_package = "./;pb";

package pb;

// request
message Message{
  string body = 1;
}

message ReqBase{
  string UserOrOrg  = 1;
  string ProjectName = 2;
}

message ReqList{
  string UserOrOrg  = 1;
  string ProjectName = 2;
  string TreePath = 3;
}

message ReqUpdateOptions {
  string LastCommitID  = 1;
  string OldBranch   = 2; 
  string NewBranch   = 3;
  string OldTreeName  = 4;
  string NewTreeName  = 5;
  string Message  = 6;    
  string Content   = 7;   
  bool IsNewFile   = 8;

  string UserOrOrg  = 9;
  string ProjectName = 10;
}

message ReqMirror {
  string RemoteAddr  = 1;
  string UserOrOrg  = 2;
  string ProjectName = 3;
}

message RespBool{
  bool TrueOrFalse = 1;
}

message RespStructList{
  string Name = 1;
  string CommitId = 2;
  string Type = 3;
  string When = 4;
}

message RespStructNewest{
  string Message = 1;
  string CommitId = 2;
  string AuthorName = 3;
  string When = 4;
  string BranchName = 5;
}

message RespList{
  RespStructNewest Newest = 1;
  repeated RespStructList List = 2;
}


// func
service RepoService{
  rpc Create(ReqBase) returns (RespBool){}
  rpc Delete(ReqBase) returns (RespBool){}

  rpc List(ReqList) returns (RespList){}
  rpc Editor(ReqUpdateOptions) returns (RespBool){}

  //mirror
  rpc CreateMirror(ReqMirror) returns (RespBool){}
}


